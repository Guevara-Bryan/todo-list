(()=>{"use strict";var t,e=new Uint8Array(16);function n(){if(!t&&!(t="undefined"!=typeof crypto&&crypto.getRandomValues&&crypto.getRandomValues.bind(crypto)||"undefined"!=typeof msCrypto&&"function"==typeof msCrypto.getRandomValues&&msCrypto.getRandomValues.bind(msCrypto)))throw new Error("crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported");return t(e)}const o=/^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i,r=function(t){return"string"==typeof t&&o.test(t)};for(var c=[],i=0;i<256;++i)c.push((i+256).toString(16).substr(1));const s=function(t,e,o){var i=(t=t||{}).random||(t.rng||n)();if(i[6]=15&i[6]|64,i[8]=63&i[8]|128,e){o=o||0;for(var s=0;s<16;++s)e[o+s]=i[s];return e}return function(t){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,n=(c[t[e+0]]+c[t[e+1]]+c[t[e+2]]+c[t[e+3]]+"-"+c[t[e+4]]+c[t[e+5]]+"-"+c[t[e+6]]+c[t[e+7]]+"-"+c[t[e+8]]+c[t[e+9]]+"-"+c[t[e+10]]+c[t[e+11]]+c[t[e+12]]+c[t[e+13]]+c[t[e+14]]+c[t[e+15]]).toLowerCase();if(!r(n))throw TypeError("Stringified UUID is invalid");return n}(i)},u=function(t){let e=t;const n=s();let o={};return{set_name:function(t){e=t},get_name:function(){return e},get_id:function(){return n},get_tasks:function(){return Object.entries(o)},add_task:function(t){o[t.get_id()]=Object.assign({remove_self:function(){null!=o[t.get_id()]&&delete o[t.get_id()]}},t)},get_task:function(t){return o[t]},remove_task:function(t){null!=o[t]&&delete o[t]}}},a=function(t){const e={inbox:u("Inbox"),today:u("Today"),projects:{}};return{get_title:function(){return"Todo List"},get_section:function(t){return e[t]},add_project:function(t){e.projects[t.get_id()]=Object.assign({remove_self:function(){null!=e.projects[t.get_id()]&&delete e.projects[t.get_id()]}},t)},remove_project:function(t){null!=e.projects[t]&&delete e.projects[t]},get_project:function(t){return e.projects[t]},get_projects:function(){return Object.entries(e.projects)}}}();a.add_project(u("Homework")),a.add_project(u("TODO")),a.add_project(u("Chores")),a.get_projects().forEach((t=>{console.log(t[1].get_name())})),a.get_projects()[1][1].remove_self(),a.get_projects().forEach((t=>{console.log(t[1].get_name())}))})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,