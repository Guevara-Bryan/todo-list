(()=>{"use strict";var t,e=new Uint8Array(16);function o(){if(!t&&!(t="undefined"!=typeof crypto&&crypto.getRandomValues&&crypto.getRandomValues.bind(crypto)||"undefined"!=typeof msCrypto&&"function"==typeof msCrypto.getRandomValues&&msCrypto.getRandomValues.bind(msCrypto)))throw new Error("crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported");return t(e)}const n=/^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i,r=function(t){return"string"==typeof t&&n.test(t)};for(var s=[],c=0;c<256;++c)s.push((c+256).toString(16).substr(1));const u=function(t,e,n){var c=(t=t||{}).random||(t.rng||o)();if(c[6]=15&c[6]|64,c[8]=63&c[8]|128,e){n=n||0;for(var u=0;u<16;++u)e[n+u]=c[u];return e}return function(t){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,o=(s[t[e+0]]+s[t[e+1]]+s[t[e+2]]+s[t[e+3]]+"-"+s[t[e+4]]+s[t[e+5]]+"-"+s[t[e+6]]+s[t[e+7]]+"-"+s[t[e+8]]+s[t[e+9]]+"-"+s[t[e+10]]+s[t[e+11]]+s[t[e+12]]+s[t[e+13]]+s[t[e+14]]+s[t[e+15]]).toLowerCase();if(!r(o))throw TypeError("Stringified UUID is invalid");return o}(c)},i=function(t,e,o=null,n,r){let s=t;const c=u();let i=e,a=o,f=n,g=r;return{get_name:function(){return s},set_name:function(t){s=t},get_details:function(){return i},set_details:function(t){i=t},get_id:function(){return c},get_date:function(){return a},set_date:function(t){a=t},get_status:function(){return f},set_status:function(t){f=t},get_priority:function(){return g},set_priority:function(t){g=t}}},a=function(t){let e=t;const o=u();let n={};return{set_name:function(t){e=t},get_name:function(){return e},get_id:function(){return o},get_tasks:function(){return Object.entries(n)},add_task:function(t){t.remove_self=function(){null!=n[t.get_id()]&&delete n[t.get_id()]},n[t.get_id()]=t},get_task:function(t){return n[t]},remove_task:function(t){null!=n[t]&&delete n[t]}}},f=function(t){const e={inbox:a("Inbox"),today:a("Today"),projects:{}};return{get_title:function(){return"Todo List"},get_section:function(t){return e[t]},add_project:function(t){t.remove_self=function(){null!=e.projects[t.get_id()]&&delete e.projects[t.get_id()]},e.projects[t.get_id()]=t},remove_project:function(t){null!=e.projects[t]&&delete e.projects[t]},get_project:function(t){return e.projects[t]},get_projects:function(){return Object.entries(e.projects)}}}();f.add_project(a("Homework")),f.add_project(a("TODO")),f.add_project(a("Chores")),console.log("=============== Projects ==============="),f.get_projects().forEach((t=>{console.log(t[1].get_name())})),f.get_projects()[1][1].remove_self(),console.log("================ Deleting second item ========="),f.get_projects().forEach((t=>{console.log(t[1].get_name())})),f.get_projects()[0][1].add_task(i("Science Homework")),f.get_projects()[0][1].add_task(i("Math Homework")),f.get_projects()[0][1].add_task(i("Automata Homework")),console.log("=============== Homework Taks ================="),f.get_projects()[0][1].get_tasks().forEach((t=>{console.log(t[1].get_name())})),console.log("=========== Deleting second item ============="),f.get_projects()[0][1].get_tasks()[1][1].remove_self(),f.get_projects()[0][1].get_tasks().forEach((t=>{console.log(t[1].get_name())}))})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,