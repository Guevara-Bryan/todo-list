(()=>{"use strict";var t,n=new Uint8Array(16);function e(){if(!t&&!(t="undefined"!=typeof crypto&&crypto.getRandomValues&&crypto.getRandomValues.bind(crypto)||"undefined"!=typeof msCrypto&&"function"==typeof msCrypto.getRandomValues&&msCrypto.getRandomValues.bind(msCrypto)))throw new Error("crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported");return t(n)}const r=/^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i,o=function(t){return"string"==typeof t&&r.test(t)};for(var u=[],i=0;i<256;++i)u.push((i+256).toString(16).substr(1));const a=function(t,n,r){var i=(t=t||{}).random||(t.rng||e)();if(i[6]=15&i[6]|64,i[8]=63&i[8]|128,n){r=r||0;for(var a=0;a<16;++a)n[r+a]=i[a];return n}return function(t){var n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,e=(u[t[n+0]]+u[t[n+1]]+u[t[n+2]]+u[t[n+3]]+"-"+u[t[n+4]]+u[t[n+5]]+"-"+u[t[n+6]]+u[t[n+7]]+"-"+u[t[n+8]]+u[t[n+9]]+"-"+u[t[n+10]]+u[t[n+11]]+u[t[n+12]]+u[t[n+13]]+u[t[n+14]]+u[t[n+15]]).toLowerCase();if(!o(e))throw TypeError("Stringified UUID is invalid");return e}(i)},s=function(t){let n=t;const e=a();let r={};return{set_name:function(t){n=t},get_name:function(){return n},get_id:function(){return e},get_tasks:function(){return Object.entries(r)},add_task:function(t){t.remove_self=function(){null!=r[t.get_id()]&&delete r[t.get_id()]},r[t.get_id()]=t},get_task:function(t){return r[t]},remove_task:function(t){null!=r[t]&&delete r[t]}}};s("Inbox"),s("Today")})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibW9kZWwuYnVuZGxlLmpzIiwibWFwcGluZ3MiOiJtQkFHQSxJQUFJQSxFQUNBQyxFQUFRLElBQUlDLFdBQVcsSUFDWixTQUFTQyxJQUV0QixJQUFLSCxLQUdIQSxFQUFvQyxvQkFBWEksUUFBMEJBLE9BQU9KLGlCQUFtQkksT0FBT0osZ0JBQWdCSyxLQUFLRCxTQUErQixvQkFBYkUsVUFBZ0UsbUJBQTdCQSxTQUFTTixpQkFBa0NNLFNBQVNOLGdCQUFnQkssS0FBS0MsV0FHck8sTUFBTSxJQUFJQyxNQUFNLDRHQUlwQixPQUFPUCxFQUFnQkMsR0NqQnpCLDhIQ01BLEVBSkEsU0FBa0JPLEdBQ2hCLE1BQXVCLGlCQUFUQSxHQUFxQixPQUFXQSxJQ0toRCxJQUZBLElBQUlDLEVBQVksR0FFUEMsRUFBSSxFQUFHQSxFQUFJLE1BQU9BLEVBQ3pCRCxFQUFVRSxNQUFNRCxFQUFJLEtBQU9FLFNBQVMsSUFBSUMsT0FBTyxJQW9CakQsTUNOQSxFQXBCQSxTQUFZQyxFQUFTQyxFQUFLQyxHQUV4QixJQUFJQyxHQURKSCxFQUFVQSxHQUFXLElBQ0ZJLFNBQVdKLEVBQVFYLEtBQU9BLEtBSzdDLEdBSEFjLEVBQUssR0FBZSxHQUFWQSxFQUFLLEdBQVksR0FDM0JBLEVBQUssR0FBZSxHQUFWQSxFQUFLLEdBQVksSUFFdkJGLEVBQUssQ0FDUEMsRUFBU0EsR0FBVSxFQUVuQixJQUFLLElBQUlOLEVBQUksRUFBR0EsRUFBSSxLQUFNQSxFQUN4QkssRUFBSUMsRUFBU04sR0FBS08sRUFBS1AsR0FHekIsT0FBT0ssRUFHVCxPRFJGLFNBQW1CSSxHQUNqQixJQUFJSCxFQUFTSSxVQUFVQyxPQUFTLFFBQXNCQyxJQUFqQkYsVUFBVSxHQUFtQkEsVUFBVSxHQUFLLEVBRzdFWixHQUFRQyxFQUFVVSxFQUFJSCxFQUFTLElBQU1QLEVBQVVVLEVBQUlILEVBQVMsSUFBTVAsRUFBVVUsRUFBSUgsRUFBUyxJQUFNUCxFQUFVVSxFQUFJSCxFQUFTLElBQU0sSUFBTVAsRUFBVVUsRUFBSUgsRUFBUyxJQUFNUCxFQUFVVSxFQUFJSCxFQUFTLElBQU0sSUFBTVAsRUFBVVUsRUFBSUgsRUFBUyxJQUFNUCxFQUFVVSxFQUFJSCxFQUFTLElBQU0sSUFBTVAsRUFBVVUsRUFBSUgsRUFBUyxJQUFNUCxFQUFVVSxFQUFJSCxFQUFTLElBQU0sSUFBTVAsRUFBVVUsRUFBSUgsRUFBUyxLQUFPUCxFQUFVVSxFQUFJSCxFQUFTLEtBQU9QLEVBQVVVLEVBQUlILEVBQVMsS0FBT1AsRUFBVVUsRUFBSUgsRUFBUyxLQUFPUCxFQUFVVSxFQUFJSCxFQUFTLEtBQU9QLEVBQVVVLEVBQUlILEVBQVMsTUFBTU8sY0FNemYsSUFBSyxFQUFTZixHQUNaLE1BQU1nQixVQUFVLCtCQUdsQixPQUFPaEIsRUNOQSxDQUFVUyxJQ3NCYlEsRUFBaUIsU0FBVUMsR0FDN0IsSUFBSUMsRUFBUUQsRUFDWixNQUFNRSxFQUFNLElBQ1osSUFBSUMsRUFBUyxHQXVCYixNQUFPLENBQ0hDLFNBdkJhLFNBQVVKLEdBQVFDLEVBQVFELEdBd0J2Q0ssU0F2QmEsV0FBYyxPQUFPSixHQXdCbENLLE9BdkJXLFdBQWMsT0FBT0osR0F3QmhDSyxVQXZCYyxXQUFhLE9BQU9DLE9BQU9DLFFBQVFOLElBd0JqRE8sU0F2QmEsU0FBVUMsR0FFdkJBLEVBQUtDLFlBQWMsV0FDYWhCLE1BQXpCTyxFQUFPUSxFQUFLTCxrQkFDSkgsRUFBT1EsRUFBS0wsV0FHM0JILEVBQU9RLEVBQUtMLFVBQVlLLEdBaUJ4QkUsU0FmYSxTQUFVQyxHQUN2QixPQUFPWCxFQUFPVyxJQWVkQyxZQWJnQixTQUFVRCxHQUNQbEIsTUFBaEJPLEVBQU9XLFdBQ0NYLEVBQU9XLE1BbUJYZixFQUFlLFNBQ2ZBLEVBQWUsVSIsInNvdXJjZXMiOlsid2VicGFjazovL3RvZG8tbGlzdC8uL25vZGVfbW9kdWxlcy91dWlkL2Rpc3QvZXNtLWJyb3dzZXIvcm5nLmpzIiwid2VicGFjazovL3RvZG8tbGlzdC8uL25vZGVfbW9kdWxlcy91dWlkL2Rpc3QvZXNtLWJyb3dzZXIvcmVnZXguanMiLCJ3ZWJwYWNrOi8vdG9kby1saXN0Ly4vbm9kZV9tb2R1bGVzL3V1aWQvZGlzdC9lc20tYnJvd3Nlci92YWxpZGF0ZS5qcyIsIndlYnBhY2s6Ly90b2RvLWxpc3QvLi9ub2RlX21vZHVsZXMvdXVpZC9kaXN0L2VzbS1icm93c2VyL3N0cmluZ2lmeS5qcyIsIndlYnBhY2s6Ly90b2RvLWxpc3QvLi9ub2RlX21vZHVsZXMvdXVpZC9kaXN0L2VzbS1icm93c2VyL3Y0LmpzIiwid2VicGFjazovL3RvZG8tbGlzdC8uL3NyYy9tb2RlbC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBVbmlxdWUgSUQgY3JlYXRpb24gcmVxdWlyZXMgYSBoaWdoIHF1YWxpdHkgcmFuZG9tICMgZ2VuZXJhdG9yLiBJbiB0aGUgYnJvd3NlciB3ZSB0aGVyZWZvcmVcbi8vIHJlcXVpcmUgdGhlIGNyeXB0byBBUEkgYW5kIGRvIG5vdCBzdXBwb3J0IGJ1aWx0LWluIGZhbGxiYWNrIHRvIGxvd2VyIHF1YWxpdHkgcmFuZG9tIG51bWJlclxuLy8gZ2VuZXJhdG9ycyAobGlrZSBNYXRoLnJhbmRvbSgpKS5cbnZhciBnZXRSYW5kb21WYWx1ZXM7XG52YXIgcm5kczggPSBuZXcgVWludDhBcnJheSgxNik7XG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBybmcoKSB7XG4gIC8vIGxhenkgbG9hZCBzbyB0aGF0IGVudmlyb25tZW50cyB0aGF0IG5lZWQgdG8gcG9seWZpbGwgaGF2ZSBhIGNoYW5jZSB0byBkbyBzb1xuICBpZiAoIWdldFJhbmRvbVZhbHVlcykge1xuICAgIC8vIGdldFJhbmRvbVZhbHVlcyBuZWVkcyB0byBiZSBpbnZva2VkIGluIGEgY29udGV4dCB3aGVyZSBcInRoaXNcIiBpcyBhIENyeXB0byBpbXBsZW1lbnRhdGlvbi4gQWxzbyxcbiAgICAvLyBmaW5kIHRoZSBjb21wbGV0ZSBpbXBsZW1lbnRhdGlvbiBvZiBjcnlwdG8gKG1zQ3J5cHRvKSBvbiBJRTExLlxuICAgIGdldFJhbmRvbVZhbHVlcyA9IHR5cGVvZiBjcnlwdG8gIT09ICd1bmRlZmluZWQnICYmIGNyeXB0by5nZXRSYW5kb21WYWx1ZXMgJiYgY3J5cHRvLmdldFJhbmRvbVZhbHVlcy5iaW5kKGNyeXB0bykgfHwgdHlwZW9mIG1zQ3J5cHRvICE9PSAndW5kZWZpbmVkJyAmJiB0eXBlb2YgbXNDcnlwdG8uZ2V0UmFuZG9tVmFsdWVzID09PSAnZnVuY3Rpb24nICYmIG1zQ3J5cHRvLmdldFJhbmRvbVZhbHVlcy5iaW5kKG1zQ3J5cHRvKTtcblxuICAgIGlmICghZ2V0UmFuZG9tVmFsdWVzKSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoJ2NyeXB0by5nZXRSYW5kb21WYWx1ZXMoKSBub3Qgc3VwcG9ydGVkLiBTZWUgaHR0cHM6Ly9naXRodWIuY29tL3V1aWRqcy91dWlkI2dldHJhbmRvbXZhbHVlcy1ub3Qtc3VwcG9ydGVkJyk7XG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIGdldFJhbmRvbVZhbHVlcyhybmRzOCk7XG59IiwiZXhwb3J0IGRlZmF1bHQgL14oPzpbMC05YS1mXXs4fS1bMC05YS1mXXs0fS1bMS01XVswLTlhLWZdezN9LVs4OWFiXVswLTlhLWZdezN9LVswLTlhLWZdezEyfXwwMDAwMDAwMC0wMDAwLTAwMDAtMDAwMC0wMDAwMDAwMDAwMDApJC9pOyIsImltcG9ydCBSRUdFWCBmcm9tICcuL3JlZ2V4LmpzJztcblxuZnVuY3Rpb24gdmFsaWRhdGUodXVpZCkge1xuICByZXR1cm4gdHlwZW9mIHV1aWQgPT09ICdzdHJpbmcnICYmIFJFR0VYLnRlc3QodXVpZCk7XG59XG5cbmV4cG9ydCBkZWZhdWx0IHZhbGlkYXRlOyIsImltcG9ydCB2YWxpZGF0ZSBmcm9tICcuL3ZhbGlkYXRlLmpzJztcbi8qKlxuICogQ29udmVydCBhcnJheSBvZiAxNiBieXRlIHZhbHVlcyB0byBVVUlEIHN0cmluZyBmb3JtYXQgb2YgdGhlIGZvcm06XG4gKiBYWFhYWFhYWC1YWFhYLVhYWFgtWFhYWC1YWFhYWFhYWFhYWFhcbiAqL1xuXG52YXIgYnl0ZVRvSGV4ID0gW107XG5cbmZvciAodmFyIGkgPSAwOyBpIDwgMjU2OyArK2kpIHtcbiAgYnl0ZVRvSGV4LnB1c2goKGkgKyAweDEwMCkudG9TdHJpbmcoMTYpLnN1YnN0cigxKSk7XG59XG5cbmZ1bmN0aW9uIHN0cmluZ2lmeShhcnIpIHtcbiAgdmFyIG9mZnNldCA9IGFyZ3VtZW50cy5sZW5ndGggPiAxICYmIGFyZ3VtZW50c1sxXSAhPT0gdW5kZWZpbmVkID8gYXJndW1lbnRzWzFdIDogMDtcbiAgLy8gTm90ZTogQmUgY2FyZWZ1bCBlZGl0aW5nIHRoaXMgY29kZSEgIEl0J3MgYmVlbiB0dW5lZCBmb3IgcGVyZm9ybWFuY2VcbiAgLy8gYW5kIHdvcmtzIGluIHdheXMgeW91IG1heSBub3QgZXhwZWN0LiBTZWUgaHR0cHM6Ly9naXRodWIuY29tL3V1aWRqcy91dWlkL3B1bGwvNDM0XG4gIHZhciB1dWlkID0gKGJ5dGVUb0hleFthcnJbb2Zmc2V0ICsgMF1dICsgYnl0ZVRvSGV4W2FycltvZmZzZXQgKyAxXV0gKyBieXRlVG9IZXhbYXJyW29mZnNldCArIDJdXSArIGJ5dGVUb0hleFthcnJbb2Zmc2V0ICsgM11dICsgJy0nICsgYnl0ZVRvSGV4W2FycltvZmZzZXQgKyA0XV0gKyBieXRlVG9IZXhbYXJyW29mZnNldCArIDVdXSArICctJyArIGJ5dGVUb0hleFthcnJbb2Zmc2V0ICsgNl1dICsgYnl0ZVRvSGV4W2FycltvZmZzZXQgKyA3XV0gKyAnLScgKyBieXRlVG9IZXhbYXJyW29mZnNldCArIDhdXSArIGJ5dGVUb0hleFthcnJbb2Zmc2V0ICsgOV1dICsgJy0nICsgYnl0ZVRvSGV4W2FycltvZmZzZXQgKyAxMF1dICsgYnl0ZVRvSGV4W2FycltvZmZzZXQgKyAxMV1dICsgYnl0ZVRvSGV4W2FycltvZmZzZXQgKyAxMl1dICsgYnl0ZVRvSGV4W2FycltvZmZzZXQgKyAxM11dICsgYnl0ZVRvSGV4W2FycltvZmZzZXQgKyAxNF1dICsgYnl0ZVRvSGV4W2FycltvZmZzZXQgKyAxNV1dKS50b0xvd2VyQ2FzZSgpOyAvLyBDb25zaXN0ZW5jeSBjaGVjayBmb3IgdmFsaWQgVVVJRC4gIElmIHRoaXMgdGhyb3dzLCBpdCdzIGxpa2VseSBkdWUgdG8gb25lXG4gIC8vIG9mIHRoZSBmb2xsb3dpbmc6XG4gIC8vIC0gT25lIG9yIG1vcmUgaW5wdXQgYXJyYXkgdmFsdWVzIGRvbid0IG1hcCB0byBhIGhleCBvY3RldCAobGVhZGluZyB0b1xuICAvLyBcInVuZGVmaW5lZFwiIGluIHRoZSB1dWlkKVxuICAvLyAtIEludmFsaWQgaW5wdXQgdmFsdWVzIGZvciB0aGUgUkZDIGB2ZXJzaW9uYCBvciBgdmFyaWFudGAgZmllbGRzXG5cbiAgaWYgKCF2YWxpZGF0ZSh1dWlkKSkge1xuICAgIHRocm93IFR5cGVFcnJvcignU3RyaW5naWZpZWQgVVVJRCBpcyBpbnZhbGlkJyk7XG4gIH1cblxuICByZXR1cm4gdXVpZDtcbn1cblxuZXhwb3J0IGRlZmF1bHQgc3RyaW5naWZ5OyIsImltcG9ydCBybmcgZnJvbSAnLi9ybmcuanMnO1xuaW1wb3J0IHN0cmluZ2lmeSBmcm9tICcuL3N0cmluZ2lmeS5qcyc7XG5cbmZ1bmN0aW9uIHY0KG9wdGlvbnMsIGJ1Ziwgb2Zmc2V0KSB7XG4gIG9wdGlvbnMgPSBvcHRpb25zIHx8IHt9O1xuICB2YXIgcm5kcyA9IG9wdGlvbnMucmFuZG9tIHx8IChvcHRpb25zLnJuZyB8fCBybmcpKCk7IC8vIFBlciA0LjQsIHNldCBiaXRzIGZvciB2ZXJzaW9uIGFuZCBgY2xvY2tfc2VxX2hpX2FuZF9yZXNlcnZlZGBcblxuICBybmRzWzZdID0gcm5kc1s2XSAmIDB4MGYgfCAweDQwO1xuICBybmRzWzhdID0gcm5kc1s4XSAmIDB4M2YgfCAweDgwOyAvLyBDb3B5IGJ5dGVzIHRvIGJ1ZmZlciwgaWYgcHJvdmlkZWRcblxuICBpZiAoYnVmKSB7XG4gICAgb2Zmc2V0ID0gb2Zmc2V0IHx8IDA7XG5cbiAgICBmb3IgKHZhciBpID0gMDsgaSA8IDE2OyArK2kpIHtcbiAgICAgIGJ1ZltvZmZzZXQgKyBpXSA9IHJuZHNbaV07XG4gICAgfVxuXG4gICAgcmV0dXJuIGJ1ZjtcbiAgfVxuXG4gIHJldHVybiBzdHJpbmdpZnkocm5kcyk7XG59XG5cbmV4cG9ydCBkZWZhdWx0IHY0OyIsImltcG9ydCB7IHY0IGFzIGdlbmVyZWF0ZV9pZCB9IGZyb20gJ3V1aWQnO1xuXG5jb25zdCBjcmVhdGVfdGFzayA9IGZ1bmN0aW9uIChuYW1lLCBkZXRhaWxzLCBkYXRlLCBzdGF0dXMsIHByaW9yaXR5KXtcbiAgICBsZXQgX25hbWUgPSBuYW1lOyAgXG4gICAgY29uc3QgX2lkID0gZ2VuZXJlYXRlX2lkKCk7XG4gICAgbGV0IF9kZXRhaWxzID0gZGV0YWlscztcbiAgICBsZXQgX2RhdGUgPSBkYXRlO1xuICAgIGxldCBfc3RhdHVzID0gc3RhdHVzO1xuICAgIGxldCBfcHJpb3JpdHkgPSBwcmlvcml0eTtcblxuICAgIGNvbnN0IGdldF9uYW1lID0gZnVuY3Rpb24gKCkgeyByZXR1cm4gX25hbWU7IH07XG4gICAgY29uc3Qgc2V0X25hbWUgPSBmdW5jdGlvbiAobmFtZSkgeyBfbmFtZSA9IG5hbWU7IH07IFxuICAgIGNvbnN0IGdldF9kZXRhaWxzID0gZnVuY3Rpb24gKCkgeyByZXR1cm4gX2RldGFpbHM7IH07XG4gICAgY29uc3Qgc2V0X2RldGFpbHMgPSBmdW5jdGlvbiAoZGV0YWlscykgeyBfZGV0YWlscyA9IGRldGFpbHM7IH07IFxuICAgIGNvbnN0IGdldF9pZCA9IGZ1bmN0aW9uICgpIHsgcmV0dXJuIF9pZDsgfTtcbiAgICBjb25zdCBnZXRfZGF0ZSA9IGZ1bmN0aW9uICgpIHsgcmV0dXJuIF9kYXRlOyB9O1xuICAgIGNvbnN0IHNldF9kYXRlID0gZnVuY3Rpb24gKGRhdGUpIHsgX2RhdGUgPSBkYXRlOyB9O1xuICAgIGNvbnN0IGdldF9zdGF0dXMgPSBmdW5jdGlvbiAoKSB7IHJldHVybiBfc3RhdHVzOyB9O1xuICAgIGNvbnN0IHNldF9zdGF0dXMgPSBmdW5jdGlvbiAoc3RhdHVzKSB7IF9zdGF0dXMgPSBzdGF0dXM7IH1cbiAgICBjb25zdCBnZXRfcHJpb3JpdHkgPSBmdW5jdGlvbiAoKSB7IHJldHVybiBfcHJpb3JpdHk7IH07XG4gICAgY29uc3Qgc2V0X3ByaW9yaXR5ID0gZnVuY3Rpb24gKHByaW9yaXR5KSB7IF9wcmlvcml0eSA9IHByaW9yaXR5OyB9O1xuICAgIGNvbnN0IHRvX2pzb24gPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHJldHVybiBKU09OLnN0cmluZ2lmeSh7bmFtZTogX25hbWUsIGlkOiBfaWQsIGRldGFpbHM6IF9kZXRhaWxzLCBkYXRlOiBfZGF0ZS50b1N0cmluZygpLCBzdGF0dXM6IF9zdGF0dXMsIHByaW9yaXR5OiBfcHJpb3JpdHl9KTtcbiAgICB9XG5cbiAgICByZXR1cm4ge1xuICAgICAgICBnZXRfbmFtZSxcbiAgICAgICAgc2V0X25hbWUsXG4gICAgICAgIGdldF9kZXRhaWxzLFxuICAgICAgICBzZXRfZGV0YWlscyxcbiAgICAgICAgZ2V0X2lkLFxuICAgICAgICBnZXRfZGF0ZSxcbiAgICAgICAgc2V0X2RhdGUsXG4gICAgICAgIGdldF9zdGF0dXMsXG4gICAgICAgIHNldF9zdGF0dXMsXG4gICAgICAgIGdldF9wcmlvcml0eSxcbiAgICAgICAgc2V0X3ByaW9yaXR5LFxuICAgICAgICB0b19qc29uLFxuICAgIH07XG59O1xuXG5cbmNvbnN0IGNyZWF0ZV9wcm9qZWN0ID0gZnVuY3Rpb24gKG5hbWUpe1xuICAgIGxldCBfbmFtZSA9IG5hbWU7XG4gICAgY29uc3QgX2lkID0gZ2VuZXJlYXRlX2lkKCk7XG4gICAgbGV0IF90YXNrcyA9IHt9O1xuICAgIGNvbnN0IHNldF9uYW1lID0gZnVuY3Rpb24gKG5hbWUpIHsgX25hbWUgPSBuYW1lOyB9O1xuICAgIGNvbnN0IGdldF9uYW1lID0gZnVuY3Rpb24gKCkgeyByZXR1cm4gX25hbWU7IH07XG4gICAgY29uc3QgZ2V0X2lkID0gZnVuY3Rpb24gKCkgeyByZXR1cm4gX2lkOyB9O1xuICAgIGNvbnN0IGdldF90YXNrcyA9IGZ1bmN0aW9uICgpeyByZXR1cm4gT2JqZWN0LmVudHJpZXMoX3Rhc2tzKTsgfTtcbiAgICBjb25zdCBhZGRfdGFzayA9IGZ1bmN0aW9uICh0YXNrKXtcbiAgICAgICAgLy8gR2l2ZXMgdGhlIG9iamVjdCB0aGUgYWJpbGl0eSB0byByZW1vdmUgaXRzZWxmLlxuICAgICAgICB0YXNrLnJlbW92ZV9zZWxmID0gZnVuY3Rpb24oKSB7XG4gICAgICAgICAgICBpZihfdGFza3NbdGFzay5nZXRfaWQoKV0gIT0gdW5kZWZpbmVkKXtcbiAgICAgICAgICAgICAgICBkZWxldGUgX3Rhc2tzW3Rhc2suZ2V0X2lkKCldO1xuICAgICAgICAgICAgfVxuICAgICAgICB9O1xuICAgICAgICBfdGFza3NbdGFzay5nZXRfaWQoKV0gPSB0YXNrO1xuICAgIH07XG4gICAgY29uc3QgZ2V0X3Rhc2sgPSBmdW5jdGlvbiAodF9pZCl7XG4gICAgICAgIHJldHVybiBfdGFza3NbdF9pZF07XG4gICAgfTtcbiAgICBjb25zdCByZW1vdmVfdGFzayA9IGZ1bmN0aW9uICh0X2lkKXtcbiAgICAgICAgaWYoX3Rhc2tzW3RfaWRdICE9IHVuZGVmaW5lZCl7XG4gICAgICAgICAgICBkZWxldGUgX3Rhc2tzW3RfaWRdO1xuICAgICAgICB9XG4gICAgfTtcblxuICAgIHJldHVybiB7XG4gICAgICAgIHNldF9uYW1lLFxuICAgICAgICBnZXRfbmFtZSxcbiAgICAgICAgZ2V0X2lkLFxuICAgICAgICBnZXRfdGFza3MsXG4gICAgICAgIGFkZF90YXNrLFxuICAgICAgICBnZXRfdGFzayxcbiAgICAgICAgcmVtb3ZlX3Rhc2ssXG4gICAgfTtcbn07XG5cblxuY29uc3QgYXBwID0gKGZ1bmN0aW9uICh0aXRsZSl7XG4gICAgY29uc3QgX3RpdGxlID0gdGl0bGU7XG4gICAgY29uc3QgX3NlY3Rpb25zID0ge1xuICAgICAgICBpbmJveDogY3JlYXRlX3Byb2plY3QoXCJJbmJveFwiKSxcbiAgICAgICAgdG9kYXk6IGNyZWF0ZV9wcm9qZWN0KFwiVG9kYXlcIiksXG4gICAgICAgIHByb2plY3RzOiB7fSxcbiAgICB9O1xuXG4gICAgY29uc3QgZ2V0X3RpdGxlID0gZnVuY3Rpb24gKCkgeyByZXR1cm4gX3RpdGxlOyB9O1xuICAgIGNvbnN0IGdldF9zZWN0aW9uID0gZnVuY3Rpb24gKG5hbWUpIHsgcmV0dXJuIF9zZWN0aW9uc1tuYW1lXTt9O1xuICAgIGNvbnN0IGFkZF9wcm9qZWN0ID0gZnVuY3Rpb24gKHByb2plY3QpIHsgXG4gICAgICAgIHByb2plY3QucmVtb3ZlX3NlbGYgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICBpZihfc2VjdGlvbnMucHJvamVjdHNbcHJvamVjdC5nZXRfaWQoKV0gIT0gdW5kZWZpbmVkKXtcbiAgICAgICAgICAgICAgICBkZWxldGUgX3NlY3Rpb25zLnByb2plY3RzW3Byb2plY3QuZ2V0X2lkKCldO1xuICAgICAgICAgICAgfVxuICAgICAgICB9O1xuICAgICAgICBfc2VjdGlvbnMucHJvamVjdHNbcHJvamVjdC5nZXRfaWQoKV0gPSBwcm9qZWN0O1xuICAgIH07XG4gICAgY29uc3QgcmVtb3ZlX3Byb2plY3QgPSBmdW5jdGlvbiAocF9pZCl7XG4gICAgICAgIGlmKF9zZWN0aW9ucy5wcm9qZWN0c1twX2lkXSAhPSB1bmRlZmluZWQpe1xuICAgICAgICAgICAgZGVsZXRlIF9zZWN0aW9ucy5wcm9qZWN0c1twX2lkXTtcbiAgICAgICAgfVxuICAgIH07XG4gICAgY29uc3QgZ2V0X3Byb2plY3QgPSBmdW5jdGlvbiAocF9pZCkge1xuICAgICAgICByZXR1cm4gX3NlY3Rpb25zLnByb2plY3RzW3BfaWRdO1xuICAgIH07XG4gICAgY29uc3QgZ2V0X3Byb2plY3RzID0gZnVuY3Rpb24gKCkge1xuICAgICAgICByZXR1cm4gT2JqZWN0LmVudHJpZXMoX3NlY3Rpb25zLnByb2plY3RzKTtcbiAgICB9XG5cblxuICAgIHJldHVybiB7XG4gICAgICAgIGdldF90aXRsZSxcbiAgICAgICAgZ2V0X3NlY3Rpb24sXG4gICAgICAgIGFkZF9wcm9qZWN0LFxuICAgICAgICByZW1vdmVfcHJvamVjdCxcbiAgICAgICAgZ2V0X3Byb2plY3QsXG4gICAgICAgIGdldF9wcm9qZWN0cyxcbiAgICB9O1xufSkoXCJUb2RvIExpc3RcIik7XG5cblxuLy89PT09PT09PT09PT09PT09PT09PT09PT09IEZST00gSlNPTiBPYmplY3QgZ2VuZXJhdGlvbiA9PT09PT09PT09PT09PT09PT1cblxuZnVuY3Rpb24gdGFza0Zyb21Kc29uKGpzb25fdGFrcyl7XG4gICAgY29uc3Qgb2JqID0gSlNPTi5wYXJzZShqc29uX3Rha3MpO1xuICAgIHJldHVybiBjcmVhdGVfdGFzayhvYmoubmFtZSwgb2JqLmRldGFpbHMsIG5ldyBEYXRlKG9iai5kYXRlKSwgb2JqLnN0YXR1cywgb2JqLnByaW9yaXR5KTtcbn1cblxuZnVuY3Rpb24gcHJvamVjdEZyb21Kc29uKGpzb25fcHJvamVjdCl7XG4gICAgY29uc3Qgb2JqID0gSlNPTi5wYXJzZShqc29uX3Rha3MpO1xufVxuXG5mdW5jdGlvbiBhcHBGcm9tSnNvbihqc29uX2FwcCl7XG4gICAgY29uc3Qgb2JqID0gSlNPTi5wYXJzZShqc29uX3Rha3MpO1xufVxuXG5leHBvcnQge1xuICAgIGFwcCxcbiAgICBjcmVhdGVfcHJvamVjdCxcbiAgICBjcmVhdGVfdGFzayxcbiAgICB0YXNrRnJvbUpzb24sXG4gICAgcHJvamVjdEZyb21Kc29uLFxuICAgIGFwcEZyb21Kc29uLFxufTsiXSwibmFtZXMiOlsiZ2V0UmFuZG9tVmFsdWVzIiwicm5kczgiLCJVaW50OEFycmF5Iiwicm5nIiwiY3J5cHRvIiwiYmluZCIsIm1zQ3J5cHRvIiwiRXJyb3IiLCJ1dWlkIiwiYnl0ZVRvSGV4IiwiaSIsInB1c2giLCJ0b1N0cmluZyIsInN1YnN0ciIsIm9wdGlvbnMiLCJidWYiLCJvZmZzZXQiLCJybmRzIiwicmFuZG9tIiwiYXJyIiwiYXJndW1lbnRzIiwibGVuZ3RoIiwidW5kZWZpbmVkIiwidG9Mb3dlckNhc2UiLCJUeXBlRXJyb3IiLCJjcmVhdGVfcHJvamVjdCIsIm5hbWUiLCJfbmFtZSIsIl9pZCIsIl90YXNrcyIsInNldF9uYW1lIiwiZ2V0X25hbWUiLCJnZXRfaWQiLCJnZXRfdGFza3MiLCJPYmplY3QiLCJlbnRyaWVzIiwiYWRkX3Rhc2siLCJ0YXNrIiwicmVtb3ZlX3NlbGYiLCJnZXRfdGFzayIsInRfaWQiLCJyZW1vdmVfdGFzayJdLCJzb3VyY2VSb290IjoiIn0=